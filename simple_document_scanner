import cv2
import numpy as np


def biggest_contour(contours):

    biggest = np.array([])
    max_area = 0
    for i in contours:
        area = cv2.contourArea(i)
        if area > 100:
            peri = cv2.arcLength(i, True)
            approx = cv2.approxPolyDP(i, 0.01*peri, True)
            if area > max_area and len(approx) == 4:
                biggest = approx
                max_area = area
    return biggest, max_area


def draw_rect(img, biggest, thickness):
    cv2.line(img, (biggest[0][0][0], biggest[0][0][1]), (biggest[1][0][0], biggest[1][0][1]), (255, 0, 0), thickness)
    cv2.line(img, (biggest[1][0][0], biggest[1][0][1]), (biggest[2][0][0], biggest[2][0][1]), (255, 0, 0), thickness)
    cv2.line(img, (biggest[2][0][0], biggest[2][0][1]), (biggest[3][0][0], biggest[3][0][1]), (255, 0, 0), thickness)
    cv2.line(img, (biggest[3][0][0], biggest[3][0][1]), (biggest[0][0][0], biggest[0][0][1]), (255, 0, 0), thickness)


img = cv2.imread('1.jpg')
img = cv2.resize(img, (612, 612))

gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
blur_img = cv2.GaussianBlur(gray_img, (5, 5), 1)

canny = cv2.Canny(blur_img, 50, 255)

# contours:
contours, hierarchy = cv2.findContours(canny, cv2.RETR_TREE, cv2.CHAIN_APPROX_NONE)
#cv2.drawContours(img, contours, -1, (0, 255, 0), 2)

# biggest contour:

img2 = img.copy()
biggest, max_area = biggest_contour(contours)
print(biggest)
draw_rect(img2, biggest, 2)

# warping:
wimg = biggest[1][0][0] - biggest[0][0][0]
himg = biggest[0][0][1] - biggest[3][0][1]

wimg2 = 480
himg2 = 640
print(wimg, himg)

pts1 = np.float32(biggest)
print(pts1)
pts2 = np.float32([[0, himg2], [wimg2, himg2], [wimg2, 0], [0, 0]])
matrix = cv2.getPerspectiveTransform(pts1, pts2)
output = cv2.warpPerspective(img, matrix, (wimg2, himg2))

output_coloured = output[20:output.shape[0] - 20, 20:output.shape[1] - 20]


output_gray = cv2.cvtColor(output_coloured, cv2.COLOR_BGR2GRAY)

thresh = cv2.adaptiveThreshold(output_gray, 255, cv2.ADAPTIVE_THRESH_GAUSSIAN_C, cv2.THRESH_BINARY, 21, 3)

morph = cv2.morphologyEx(thresh, cv2.MORPH_OPEN, kernel=(5, 5))
morph2 = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE, kernel=(5, 5))
morph3 = cv2.morphologyEx(thresh, cv2.MORPH_RECT, kernel=(5, 5))

cv2.imshow('image', img)
cv2.imshow('canny', canny)
cv2.imshow('out', output_coloured)
cv2.imshow('output_gray', output_gray)
cv2.imshow('morph', morph)
cv2.imshow('morph2', morph2)
cv2.imshow('morph3', morph3)

cv2.waitKey(0)

cv2.destroyAllWindows()
